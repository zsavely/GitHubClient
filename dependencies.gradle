ext.bp = [
    support: "com.android.support",
    tools  : "com.android.tools",
    storio : "com.pushtorefresh.storio",
    rx     : "io.reactivex",
    jw     : "com.jakewharton",
    sq     : "com.squareup",
    bl     : "com.bluelinelabs",
    gs     : "com.google.android.gms",
    gms    : "com.google.gms",
    ir     : "io.realm",
]

ext.versions = [
    // Manifest.
    code                : 1,
    name                : '0.0.1',

    minSdk              : 16,
    targetSdk           : 24,
    compileSdk          : 24,
    buildTools          : '24.0.2',

    // Application dependencies.
    supportLibs         : '24.2.1',
    dataBinding         : '1.2.1',
    dagger2             : '2.6.1',

    okhttp              : '3.4.1',
    retrofit            : '2.1.0',
    okio                : '1.10.0',
    picasso             : '2.5.2',

    loganSquare         : '1.3.7',
    loganSquareConverter: '1.4.1',

    rxJava              : '1.1.10',
    rxAndroid           : '1.2.1',

    butterknife         : '8.4.0',
    timber                        : '4.3.0',
    picasso2OkHttp3Downloader     : '1.0.2',

    transitionsEverywhere         : '1.6.5',
    rxClipboard                   : '1.0.2',
    adapterDelegates              : '2.0.1',
    fragmentArgs                  : '3.0.2',
    eventBus                      : '3.0.0',
    icePick                       : '3.2.0',
    crashlytics                   : '2.6.2',
    googlePlayServices            : '9.4.0',
    firebaseMessaging             : '9.4.0',

    autoValue                     : '1.3',
    parceler                      : '1.1.5',

    // Helper dependencies.
    stetho                        : '1.3.1',
    leakCanary                    : '1.3.1',
    tinyDancer                    : '0.0.9',
    lynx                          : '1.6',
    processPhoenix                : '1.0.2',

    // Gradle Plugins.
    androidGradlePlugin           : '2.1.3',
    googlePlayServicesGradlePlugin: '3.0.0',
    androidDevMetricsGradlePlugin : '0.4',
    androidRealmPlugin            : '1.0.0',
    jacocoGradlePlugin            : '0.7.6.201602180812',
    androidAptGradlePlugin        : '1.8',
    hugoGradlePlugin              : '1.2.1',
    dexCountGradlePlugin          : '0.5.2',
    gradleVersionsPlugin          : '0.13.0',

    // Testing dependencies.
    junit                         : '4.12',
    robolectric                   : '3.1.2',
    assertJ                       : '2.5.0',
    equalsVerifier                : '2.1.5',
    mockito                       : '1.10.19',
    supportTestRunner             : '0.5',
    espresso                      : '2.2.2',
    truth                         : '0.28',
]

ext.gradlePlugins = [
    android             : "${bp.tools}.build:gradle:${versions.androidGradlePlugin}",
    // https://github.com/jacoco/jacoco
    jacoco              : "org.jacoco:org.jacoco.core:${versions.jacocoGradlePlugin}",
    // https://bitbucket.org/hvisser/android-apt
    apt                 : "com.neenbedankt.gradle.plugins:android-apt:${versions.androidAptGradlePlugin}",
    // https://github.com/JakeWharton/hugo
    hugo                : "com.jakewharton.hugo:hugo-plugin:${versions.hugoGradlePlugin}",
    // https://github.com/KeepSafe/dexcount-gradle-plugin
    dexCount            : "com.getkeepsafe.dexcount:dexcount-gradle-plugin:${versions.dexCountGradlePlugin}",
    // https://github.com/ben-manes/gradle-versions-plugin
    gradleVersionsPlugin: "com.github.ben-manes:gradle-versions-plugin:${versions.gradleVersionsPlugin}",
]

ext.libraries = [
    // https://developer.android.com/topic/libraries/support-library/revisions.html
    supportAppCompat            : "${bp.support}:appcompat-v7:${versions.supportLibs}",
    supportDesign               : "${bp.support}:design:${versions.supportLibs}",
    supportCardView             : "${bp.support}:cardview-v7:${versions.supportLibs}",
    supportGridLayout           : "${bp.support}:gridlayout-v7:${versions.supportLibs}",
    supportRecyclerView         : "${bp.support}:recyclerview-v7:${versions.supportLibs}",
    supportAnnotations          : "${bp.support}:support-annotations:${versions.supportLibs}",
    dataBindingAdapters         : "com.android.databinding:adapters:${versions.dataBinding}",
    dataBindingLibrary          : "com.android.databinding:library:${versions.dataBinding}",

    // https://developers.google.com/android/guides/setup
    accountLogin                : "${bp.gs}:play-services-auth:${versions.googlePlayServices}",
    firebaseMessaging           : "com.google.firebase:firebase-messaging:${versions.firebaseMessaging}",
    crashlytics                 : "com.crashlytics.sdk.android:crashlytics:${versions.crashlytics}@aar",

    // https://github.com/google/dagger
    dagger2                     : "com.google.dagger:dagger:${versions.dagger2}",
    dagger2Compiler             : "com.google.dagger:dagger-compiler:${versions.dagger2}",

    // https://github.com/square/retrofit
    retrofit                    : "${bp.sq}.retrofit2:retrofit:${versions.retrofit}",
    retrofitConverterGson       : "${bp.sq}.retrofit2:converter-gson:${versions.retrofit}",
    retrofitConverterScalars    : "${bp.sq}.retrofit2:converter-scalars:${versions.retrofit}",
    retrofitRxJavaAdapter       : "${bp.sq}.retrofit2:adapter-rxjava:${versions.retrofit}",

    // https://github.com/square/okhttp
    okhttp                      : "${bp.sq}.okhttp3:okhttp:${versions.okhttp}",
    okhttpLogging               : "${bp.sq}.okhttp3:logging-interceptor:${versions.okhttp}",
    // https://github.com/square/okio
    okio                        : "${bp.sq}.okio:okio:${versions.okio}",
    // https://github.com/square/picasso
    picasso                     : "${bp.sq}.picasso:picasso:${versions.picasso}",

    // https://github.com/greenrobot/EventBus
    eventBus                    : "org.greenrobot:eventbus:${versions.eventBus}",

    // https://github.com/google/gson
    gson                        : "com.google.code.gson:gson:${versions.gson}",
    // https://github.com/bluelinelabs/LoganSquare
    loganSquare                 : "${bp.bl}:logansquare:${versions.loganSquare}",
    loganSquareCompiler         : "${bp.bl}:logansquare-compiler:${versions.loganSquare}",
    // https://github.com/aurae/retrofit-logansquare
    retrofitLoganSquareConverter: "com.github.aurae.retrofit2:converter-logansquare:${versions.loganSquareConverter}",

    // https://github.com/ReactiveX/RxJava
    rxJava                      : "${bp.rx}:rxjava:${versions.rxJava}",
    // https://github.com/ReactiveX/RxAndroid
    rxAndroid                   : "${bp.rx}:rxandroid:${versions.rxAndroid}",

    // https://github.com/JakeWharton/butterknife
    butterknife                 : "${bp.jw}:butterknife:${versions.butterknife}",
    butterknifeCompiler         : "${bp.jw}:butterknife-compiler:${versions.butterknife}",
    // https://github.com/JakeWharton/timber
    timber                      : "${bp.jw}.timber:timber:${versions.timber}",
    // https://github.com/JakeWharton/picasso2-okhttp3-downloader
    picasso2OkHttp3Downloader   : "${bp.jw}.picasso:picasso2-okhttp3-downloader:${versions.picasso2OkHttp3Downloader}",

    // https://github.com/andkulikov/transitions-everywhere
    transitionsEverywhere       : "com.andkulikov:transitionseverywhere:${versions.transitionsEverywhere}",
    // https://github.com/sockeqwe/AdapterDelegates
    adapterDelegates            : "com.hannesdorfmann:adapterdelegates2:${versions.adapterDelegates}",
    // https://github.com/sockeqwe/fragmentargs
    fragmentArgsApi             : "com.hannesdorfmann.fragmentargs:annotation:${versions.fragmentArgs}",
    fragmentArgsProcessor       : "com.hannesdorfmann.fragmentargs:processor:${versions.fragmentArgs}",
    fragmentArgsParceler        : "com.hannesdorfmann.fragmentargs:bundler-parceler:${versions.fragmentArgs}",
    // https://github.com/google/auto/blob/master/value/userguide/index.md
    autoValue                   : "com.google.auto.value:auto-value:${versions.autoValue}",
    // https://github.com/frankiesardo/icepick
    icePick                     : "frankiesardo:icepick:${versions.icePick}",
    icePickProcessor            : "frankiesardo:icepick-processor:${versions.icePick}",
    // https://github.com/johncarl81/parceler
    parcelerApi                 : "org.parceler:parceler-api:${versions.parceler}",
    parceler                    : "org.parceler:parceler:${versions.parceler}",

    // https://github.com/square/leakcanary
    leakCanary                  : "${bp.sq}.leakcanary:leakcanary-android:${versions.leakCanary}",
    leakCanaryNoOp              : "${bp.sq}.leakcanary:leakcanary-android-no-op:${versions.leakCanary}",

    // https://github.com/pedrovgs/Lynx
    lynx                        : "com.github.pedrovgs:lynx:${versions.lynx}",

    // https://github.com/JakeWharton/ProcessPhoenix
    processPhoenix              : "${bp.jw}:process-phoenix:${versions.processPhoenix}",

    // https://github.com/facebook/stetho
    stetho                      : "com.facebook.stetho:stetho:${versions.stetho}",
    stethoOkHttp                : "com.facebook.stetho:stetho-okhttp3:${versions.stetho}",

    // https://github.com/friendlyrobotnyc/TinyDancer
    tinyDancer                  : "com.github.brianPlummer:tinydancer:${versions.tinyDancer}",
]

ext.testingLibraries = [
    // https://github.com/square/okhttp/tree/master/mockwebserver
    okHttpMockWebServer   : "${bp.sq}.okhttp3:mockwebserver:$versions.okhttp",

    // http://junit.org/junit4/
    junit                 : "junit:junit:${versions.junit}",

    // http://robolectric.org/
    // https://github.com/robolectric/robolectric/
    robolectric           : "org.robolectric:robolectric:${versions.robolectric}",

    // http://joel-costigliola.github.io/assertj/
    assertJ               : "org.assertj:assertj-core:${versions.assertJ}",

    // https://github.com/jqno/equalsverifier
    equalsVerifier        : "nl.jqno.equalsverifier:equalsverifier:${versions.equalsVerifier}",

    // http://mockito.org/
    mockitoCore           : "org.mockito:mockito-core:${versions.mockito}",

    // Assertion/Proposition framework for Java unit tests.
    // http://google.github.io/truth
    truth                 : "com.google.truth:truth:${versions.truth}",

    // Android JUnit Runner.
    // https://google.github.io/android-testing-support-library/downloads/
    supportTestRunner     : "${bp.support}.test:runner:${versions.supportTestRunner}",
    // JUnit4 Rules.
    supportTestRules      : "${bp.support}.test:rules:${versions.supportTestRunner}",
    // Espresso core.
    espressoCore          : "${bp.support}.test.espresso:espresso-core:${versions.espresso}",
    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource.
    espressoContrib       : "${bp.support}.test.espresso:espresso-contrib:${versions.espresso}",
    // Espresso-web for WebView support.
    espressoWeb           : "${bp.support}.test.espresso:espresso-web:${versions.espresso}",
    // Espresso-idling-resource for synchronization with background jobs.
    espressoIdlingResource: "${bp.support}.test.espresso:espresso-idling-resource:${versions.espresso}",
    // Espresso-Intents is an extension to Espresso,
    // which enables validation and stubbing of Intents sent out by the application under test.
    // It’s like Mockito, but for Android Intents.
    // https://google.github.io/android-testing-support-library/docs/espresso/intents/index.html
    espressoIntents       : "${bp.support}.test.espresso:espresso-intents:${versions.espresso}",
]
