import java.text.DateFormat
import java.text.SimpleDateFormat

final class Globals {
  static final String pattern = "yyyy-MM-dd HH:mm:ss Z";
  static final Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
}

def long getBuildDateLong() {
  return Globals.calendar.getTimeInMillis();
}

def String getBuildDateString() {
  DateFormat dateFormat = new SimpleDateFormat(Globals.pattern, Locale.getDefault());
  dateFormat.setTimeZone(TimeZone.getDefault());
  return dateFormat.format(Globals.calendar.getTime());
}

def gitLocalSha() {
  def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    logger.warn(p.errorStream.text)
    return "empty";
  }

  return p.text.trim()
}

def gitFullLocalSha() {
  def p = 'git rev-parse HEAD'.execute([], project.rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    logger.warn(p.errorStream.text)
    return "empty";
  }

  return p.text.trim()
}

def gitTimestamp() {
  def p = 'git log -n 1 --format=%at'.execute([], rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    logger.warn(p.errorStream.text)
    return -1;
  }

  long timestamp = Long.parseLong(p.text.trim()) * 1000l

  Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
  calendar.setTimeInMillis(timestamp)
  calendar.add(Calendar.MILLISECOND, -calendar.getTimeZone().getOffset(calendar.getTimeInMillis()));

  return calendar.getTimeInMillis()
}

def String gitTimestampString() {
  def p = 'git log -n 1 --format=%ai'.execute([], rootDir)
  p.waitFor()
  if (p.exitValue() != 0) {
    logger.warn(p.errorStream.text)
    return "empty";
  }

  return p.text.trim()
}

def boolean isCi() {
  return "true".equals(System.getenv("CI"));
}

def boolean isPreDexEnabled() {
  return "true".equals(System.getProperty("pre-dex", "true"));
}

ext {
  isCi = this.&isCi
  isPreDexEnabled = this.&isPreDexEnabled
  getBuildDateLong = this.&getBuildDateLong
  getBuildDateString = this.&getBuildDateString
  gitLocalSha = this.&gitLocalSha
  gitFullLocalSha = this.&gitFullLocalSha
  gitTimestamp = this.&gitTimestamp
  gitTimestampString = this.&gitTimestampString
}
